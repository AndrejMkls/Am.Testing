@page "/authors/index/v1"
@using Am.Testing.Domain.Entities
@using Am.Testing.Web.Components.Filters.Authors

@inherits BasePage
@inject MainDbContext DbContext
@inject IStringLocalizer<AuthorsIndexV1> Localizer

<h3>@Localizer["Title"]</h3>

<div class="d-flex justify-content-end align-items-center">
    <RadzenLink Path="/authors/create/v1">
        <RadzenButton ButtonStyle="ButtonStyle.Dark" Text=@Localizer["CreateNew"] />
    </RadzenLink>
</div>

<RadzenTabs>
    <Tabs>
        <RadzenTabsItem Text=@Localizer["Cards"]>

            <div class="d-flex justify-content-between align-items-center gap-1 flex-wrap">
                <div>
                    <AuthorFilter></AuthorFilter>
                </div>
                <div>
                    <AuthorSorting></AuthorSorting>
                </div>
            </div>

            <RadzenDataList TItem="Author" Data="items" WrapItems=true>
                <Template>

                    <RadzenCard Style="max-width: 200px;">
                        <div class="d-flex justify-content-center">
                            <RadzenBadge IsPill="@true" Text="@context.Initials" class="rz-ml-2"
                                         Style="background-color: hsl(5, 69%, 60%)" />
                        </div>
                        <div style="min-height:60px; margin-top: 1rem">
                            <b>@context.FirstName @context.LastName</b>
                        </div>
                        <div>

                            <RadzenLink Path="@($"authors/{context.Id}/v1")">
                                <RadzenButton Text="Otvoriť" class="w-100" Style="background-color: hsl(5, 69%, 60%)" />
                            </RadzenLink>

                        </div>
                    </RadzenCard>



                </Template>
            </RadzenDataList>

        </RadzenTabsItem>

        <RadzenTabsItem Text=@Localizer["Table"]>

            <RadzenDataGrid TItem="Author" Data="items"
                            AllowFiltering=true FilterMode="FilterMode.Simple"
                            AllowAlternatingRows=true>
                <Columns>
                    
                    <RadzenDataGridColumn TItem="Author" Property="FirstName" Title="Meno" />

                    <RadzenDataGridColumn TItem="Author" Property="LastName" Title="Priezvisko" />

                    <RadzenDataGridColumn TItem="Author" Property="Nationality" Title="Nationality" />

                    <RadzenDataGridColumn TItem="Author" Property="BirthYear" Title="BirthYear">
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="Author" Property="Id" Title="Id" Filterable=false Sortable=false>
                        <Template>
                            <RadzenLink Path="@($"authors/{context.Id}/v1")">
                                <RadzenButton Text="Otvoriť" class="w-100" Style="background-color: hsl(5, 69%, 60%)" />
                            </RadzenLink>
                        </Template>
                    </RadzenDataGridColumn>

                </Columns>
            </RadzenDataGrid>

        </RadzenTabsItem>

        <RadzenTabsItem Text=@Localizer["Tree"]>

            <RadzenTree>
                @foreach (var item in items.Select(x => x.LastName[..1]).Distinct())
                {
                    <RadzenTreeItem Text="@item">

                        <ChildContent>

                            @{
                                var children = items.Where(x => x.LastName[..1] == item);
                                foreach (var person in children)
                                {
                                    string fullname = $"{person.FirstName} {person.LastName}";

                                    <RadzenTreeItem Text="@fullname">
                                        <Template>
                                            <div class="d-flex justify-content-start align-items-center">
                                            <span> @fullname </span>
                                            <div style="width: 50px;"> </div>
                                                <a href="@($"/authors/{person.Id}/v1")" style="color: black">
                                                <span class="material-icons me-2">settings</span>
                                            </a>
                                        </div>
                                        </Template>
                                    </RadzenTreeItem>
                                }
                            }

                        </ChildContent>


                    </RadzenTreeItem>
                }
            </RadzenTree>

        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>

@code {

    private IEnumerable<Author> items = Enumerable.Empty<Author>(); 

    protected override async Task OnInitializedAsync()
    {
        var list = await DbContext.Authors.ToListAsync();

        if (list is not null)
        {
            items = list;
        }
        
    }
}
